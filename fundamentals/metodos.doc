M√©todos para Strings
.trim(): Remove espa√ßos em branco e caracteres de nova linha do in√≠cio e fim de uma string.
.to_string(): Converte um valor em uma String.
.len(): Retorna o comprimento da string.
.push(): Adiciona um √∫nico caractere ao final de uma string mut√°vel.
.push_str(): Adiciona uma string inteira ao final de uma string mut√°vel.
.replace(): Substitui todas as ocorr√™ncias de uma substring por outra.
.to_uppercase(): Converte a string para mai√∫sculas.
.to_lowercase(): Converte a string para min√∫sculas.

M√©todos para Arrays e Vetores
.len(): Retorna o n√∫mero de elementos.
.push(): Adiciona um elemento ao final de um vetor mut√°vel.
.pop(): Remove e retorna o √∫ltimo elemento do vetor.
.contains(): Verifica se o vetor cont√©m um valor espec√≠fico.
.sort(): Ordena os elementos em ordem crescente.
.reverse(): Inverte a ordem dos elementos.

M√©todos para Iteradores
.iter(): Cria um iterador imut√°vel.
.map(): Aplica uma fun√ß√£o a cada elemento do iterador.
.filter(): Retorna apenas os elementos que satisfazem uma condi√ß√£o.
.collect(): Converte o iterador em uma cole√ß√£o, como um vetor.
.enumerate(): Retorna um iterador que inclui o √≠ndice e o valor.

M√©todos para Option e Result
.unwrap(): Retorna o valor contido, mas gera um erro se for None ou Err.
.unwrap_or(): Retorna o valor contido ou um valor padr√£o caso seja None.
.expect(): Similar ao .unwrap(), mas com uma mensagem de erro personalizada.
.is_some(): Verifica se o valor √© Some.
.is_none(): Verifica se o valor √© None.

M√©todos Matem√°ticos
Opera√ß√µes B√°sicas:
add: Soma de dois valores.
sub: Subtra√ß√£o de dois valores.
mul: Multiplica√ß√£o de dois valores.
div: Divis√£o de dois valores.
rem: Resto da divis√£o (m√≥dulo).

Fun√ß√µes Avan√ßadas:
.abs(): Retorna o valor absoluto.
.powi(exp): Eleva o n√∫mero a uma pot√™ncia inteira.
.powf(exp): Eleva o n√∫mero a uma pot√™ncia de ponto flutuante.
.sqrt(): Retorna a raiz quadrada.
.cbrt(): Retorna a raiz c√∫bica.
.exp(): Retorna 
ùëí
ùë•
e 
x
 , onde 
ùëí
e √© a base do logaritmo natural.
.ln(): Retorna o logaritmo natural (base 
ùëí
e).
.log(base): Retorna o logaritmo em uma base especificada.
.sin(): Calcula o seno (em radianos).
.cos(): Calcula o cosseno (em radianos).
.tan(): Calcula a tangente (em radianos).
.asin(): Retorna o arco-seno (em radianos).
.acos(): Retorna o arco-cosseno (em radianos).
.atan(): Retorna o arco-tangente (em radianos).
.atan2(y, x): Retorna o arco-tangente de 
ùë¶
/
ùë•
y/x, levando em conta os sinais.
.hypot(x, y): Retorna a hipotenusa (
ùë•
2
+
ùë¶
2
x 
2
 +y 
2
 
‚Äã
 ).

Arredondamento e Truncamento:
.round(): Arredonda para o inteiro mais pr√≥ximo.
.ceil(): Arredonda para o maior inteiro mais pr√≥ximo.
.floor(): Arredonda para o menor inteiro mais pr√≥ximo.
.trunc(): Descarta a parte decimal (truncamento).
.fract(): Retorna a parte fracion√°ria do n√∫mero.

Compara√ß√µes:
.min(): Retorna o menor valor entre dois n√∫meros.
.max(): Retorna o maior valor entre dois n√∫meros.
.clamp(min, max): Restringe um valor para que fique dentro de um intervalo.

Aleatoriedade:
rand::random(): Gera um n√∫mero aleat√≥rio.
rand::thread_rng().gen_range(start..end): Gera um n√∫mero aleat√≥rio dentro de um intervalo.
